version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-backend
    # Don't publish port directly to host
    # ports:
    #  - "5001:5001"
    environment:
      - FLASK_DEBUG=false
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-for-socket-io}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sitchat-backend.rule=Host(`www.sitchat.ai`) && (PathPrefix(`/v1`) || PathPrefix(`/socket.io`))
      - traefik.http.routers.sitchat-backend.entrypoints=https
      - traefik.http.routers.sitchat-backend.tls=true
      - traefik.http.routers.sitchat-backend.tls.certresolver=letsencrypt
      - traefik.http.services.sitchat-backend.loadbalancer.server.port=5001
      - traefik.http.middlewares.sitchat-websocket.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.sitchat-backend.middlewares=sitchat-websocket
    networks:
      - app-network
      - coolify

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "https://www.sitchat.ai/v1"
    container_name: vue-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    labels:
      - traefik.enable=true
      - traefik.http.routers.sitchat-frontend.rule=Host(`www.sitchat.ai`) && PathPrefix(`/`)
      - traefik.http.routers.sitchat-frontend.entrypoints=https
      - traefik.http.routers.sitchat-frontend.tls=true
      - traefik.http.routers.sitchat-frontend.tls.certresolver=letsencrypt
      - traefik.http.services.sitchat-frontend.loadbalancer.server.port=80
      - traefik.priority=1
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
      - coolify

networks:
  app-network:
  coolify:
    external: true